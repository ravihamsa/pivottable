{"version":3,"sources":["c3_renderers.coffee","c3_renderers.min.js"],"names":["callWithJQuery","identityFunction","pivotModule","exports","module","require","define","amd","jQuery","c3","str","$","makeC3Chart","chartOpts","pivotData","opts","agg","attrs","base","base1","base2","base3","base4","base5","colKey","colKeys","columns","dataColumns","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","k","l","labelFormatter","len","len1","len2","len3","len4","m","numCharsInHAxis","numSeries","params","ref","ref1","ref2","ref3","renderArea","result","rotationAngle","row","rowHeader","rowKey","rowKeys","s","scatterData","series","title","titleText","vAxisTitle","val","vals","x","xs","localeStrings","vs","by","extend","size","width","window","innerWidth","height","innerHeight","type","getRowKeys","length","push","getColKeys","results","join","aggregatorName","valAttrs","map","_this","attr","this","y","t","rowAttrs","concat","colAttrs","slice","getAggregator","value","format","parseFloat","isFinite","toPrecision","toFixed","style","text","axis","label","tick","rotate","multiline","data","tooltip","grouped","color","pattern","fit","legend","show","name","a","b","c","d","categories","stacked","groups","len5","n","appendTo","bindto","generate","detach","remove","append","pivotUtilities","c3_renderers","Line Chart","Bar Chart","Stacked Bar Chart","Area Chart","Scatter Chart","call"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\"), require(\"c3\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\", \"c3\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery, c3\n\nidentityFunction = (str) -> str;\n        \ncallWithJQuery ($, c3) ->\n\n    makeC3Chart = (chartOpts = {}) -> (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                vs: \"vs\"\n                by: \"by\"\n            c3: {}\n\n        opts = $.extend true, defaults, opts\n        opts.c3.size ?= {}\n        opts.c3.size.width ?= window.innerWidth / 1.4\n        opts.c3.size.height ?= window.innerHeight / 1.4 - 50\n        labelFormatter = opts.labelFormatter || identityFunction\n        chartOpts.type ?= \"line\"\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n\n        headers = (h.join(\"-\") for h in colKeys)\n        rotationAngle = 0\n\n        fullAggName = pivotData.aggregatorName \n        if pivotData.valAttrs.length\n            fullAggName += \"(#{pivotData.valAttrs.map((attr)=>labelFormatter(attr)).join(\", \")})\"\n\n        if chartOpts.type == \"scatter\"\n            scatterData = x:{}, y:{}, t:{}\n            attrs = pivotData.rowAttrs.concat(pivotData.colAttrs)\n            vAxisTitle = labelFormatter(attrs[0]) ? \"\"\n            hAxisTitle = labelFormatter(attrs[1]) ? \"\"\n            groupByTitle = attrs.slice(2).join(\"-\")\n            titleText = vAxisTitle\n            titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n            for rowKey in rowKeys\n                for colKey in colKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        vals = rowKey.concat(colKey)\n                        series = vals.slice(2).join(\"-\")\n                        if series == \"\" then series = \"series\"\n                        scatterData.x[series] ?= []\n                        scatterData.y[series] ?= []\n                        scatterData.t[series] ?= []\n                        scatterData.y[series].push vals[0] ? 0\n                        scatterData.x[series].push vals[1] ? 0\n                        scatterData.t[series].push agg.format(agg.value())\n        else\n            numCharsInHAxis = 0\n            for x in headers\n                numCharsInHAxis += x.length\n            if numCharsInHAxis > 50\n                rotationAngle = 45\n\n            columns = []\n            for rowKey in rowKeys\n                rowHeader = rowKey.join(\"-\")\n                row = [if rowHeader == \"\" then pivotData.aggregatorName else rowHeader]\n                for colKey in colKeys\n                    val = parseFloat  pivotData.getAggregator(rowKey, colKey).value()\n                    if isFinite(val)\n                        if val < 1\n                            row.push val.toPrecision(3)\n                        else\n                            row.push val.toFixed(3)\n                    else\n                        row.push null\n                columns.push row\n\n            vAxisTitle = pivotData.aggregatorName+ \n                if pivotData.valAttrs.length then \"(#{pivotData.valAttrs.map((attr)=>labelFormatter(attr)).join(\", \")})\" else \"\"\n            hAxisTitle = pivotData.colAttrs.map((attr)=>labelFormatter(attr)).join(\"-\")\n\n            titleText = fullAggName\n            titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            groupByTitle = pivotData.rowAttrs.map((attr)=>labelFormatter(attr)).join(\"-\")\n            titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n            \n        title = $(\"<p>\", {style: \"text-align: center; font-weight: bold\"})\n        title.text(titleText)\n\n        params = \n            axis: \n                y:\n                    label: vAxisTitle\n                x:\n                    label: hAxisTitle\n                    tick:\n                        rotate: rotationAngle\n                        multiline: false\n            data: \n                type: chartOpts.type\n            tooltip:\n                grouped: false\n            color: \n                pattern: [ \"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\",\n                           \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\",\n                           \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\",\n                           \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\",\n                           \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\" ]\n\n\n        $.extend true, params, opts.c3\n\n        if chartOpts.type == \"scatter\"\n            xs = {}\n            numSeries = 0\n            dataColumns = []\n            for s of scatterData.x\n                numSeries += 1\n                xs[s] = s+\"_x\"\n                dataColumns.push [s+\"_x\"].concat(scatterData.x[s])\n                dataColumns.push [s].concat(scatterData.y[s])\n            params.data.xs = xs\n            params.data.columns = dataColumns\n            params.axis.x.tick = fit: false\n            if numSeries == 1\n                params.legend = show: false \n            params.tooltip.format =  \n                title: -> fullAggName\n                name: -> \"\"\n                value: (a,b,c,d) -> scatterData.t[c][d]\n        else\n            params.axis.x.type= 'category'\n            params.axis.x.categories = headers\n            params.data.columns = columns\n\n\n        if chartOpts.stacked?\n            params.data.groups = [x.join(\"-\") for x in rowKeys]\n        renderArea = $(\"<div>\", style: \"display:none;\").appendTo $(\"body\")\n        result = $(\"<div>\").appendTo renderArea\n        params.bindto = result[0]\n        c3.generate params\n        result.detach()\n        renderArea.remove()\n        return $(\"<div>\").append title, result\n\n    $.pivotUtilities.c3_renderers = \n        \"Line Chart\": makeC3Chart()\n        \"Bar Chart\": makeC3Chart(type: \"bar\")\n        \"Stacked Bar Chart\": makeC3Chart(type: \"bar\", stacked: true)\n        \"Area Chart\": makeC3Chart(type: \"area\", stacked: true)\n        \"Scatter Chart\": makeC3Chart(type: \"scatter\")\n","(function() {\n  var callWithJQuery, identityFunction;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"), require(\"c3\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\", \"c3\"], pivotModule);\n    } else {\n      return pivotModule(jQuery, c3);\n    }\n  };\n\n  identityFunction = function(str) {\n    return str;\n  };\n\n  callWithJQuery(function($, c3) {\n    var makeC3Chart;\n    makeC3Chart = function(chartOpts) {\n      if (chartOpts == null) {\n        chartOpts = {};\n      }\n      return function(pivotData, opts) {\n        var agg, attrs, base, base1, base2, base3, base4, base5, colKey, colKeys, columns, dataColumns, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, k, l, labelFormatter, len, len1, len2, len3, len4, m, numCharsInHAxis, numSeries, params, ref, ref1, ref2, ref3, renderArea, result, rotationAngle, row, rowHeader, rowKey, rowKeys, s, scatterData, series, title, titleText, vAxisTitle, val, vals, x, xs;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          c3: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.c3).size == null) {\n          base.size = {};\n        }\n        if ((base1 = opts.c3.size).width == null) {\n          base1.width = window.innerWidth / 1.4;\n        }\n        if ((base2 = opts.c3.size).height == null) {\n          base2.height = window.innerHeight / 1.4 - 50;\n        }\n        labelFormatter = opts.labelFormatter || identityFunction;\n        if (chartOpts.type == null) {\n          chartOpts.type = \"line\";\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = colKeys.length; i < len; i++) {\n            h = colKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        rotationAngle = 0;\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.map((function(_this) {\n            return function(attr) {\n              return labelFormatter(attr);\n            };\n          })(this)).join(\", \")) + \")\";\n        }\n        if (chartOpts.type === \"scatter\") {\n          scatterData = {\n            x: {},\n            y: {},\n            t: {}\n          };\n          attrs = pivotData.rowAttrs.concat(pivotData.colAttrs);\n          vAxisTitle = (ref = labelFormatter(attrs[0])) != null ? ref : \"\";\n          hAxisTitle = (ref1 = labelFormatter(attrs[1])) != null ? ref1 : \"\";\n          groupByTitle = attrs.slice(2).join(\"-\");\n          titleText = vAxisTitle;\n          if (hAxisTitle !== \"\") {\n            titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          if (groupByTitle !== \"\") {\n            titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n          for (i = 0, len = rowKeys.length; i < len; i++) {\n            rowKey = rowKeys[i];\n            for (j = 0, len1 = colKeys.length; j < len1; j++) {\n              colKey = colKeys[j];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                vals = rowKey.concat(colKey);\n                series = vals.slice(2).join(\"-\");\n                if (series === \"\") {\n                  series = \"series\";\n                }\n                if ((base3 = scatterData.x)[series] == null) {\n                  base3[series] = [];\n                }\n                if ((base4 = scatterData.y)[series] == null) {\n                  base4[series] = [];\n                }\n                if ((base5 = scatterData.t)[series] == null) {\n                  base5[series] = [];\n                }\n                scatterData.y[series].push((ref2 = vals[0]) != null ? ref2 : 0);\n                scatterData.x[series].push((ref3 = vals[1]) != null ? ref3 : 0);\n                scatterData.t[series].push(agg.format(agg.value()));\n              }\n            }\n          }\n        } else {\n          numCharsInHAxis = 0;\n          for (k = 0, len2 = headers.length; k < len2; k++) {\n            x = headers[k];\n            numCharsInHAxis += x.length;\n          }\n          if (numCharsInHAxis > 50) {\n            rotationAngle = 45;\n          }\n          columns = [];\n          for (l = 0, len3 = rowKeys.length; l < len3; l++) {\n            rowKey = rowKeys[l];\n            rowHeader = rowKey.join(\"-\");\n            row = [rowHeader === \"\" ? pivotData.aggregatorName : rowHeader];\n            for (m = 0, len4 = colKeys.length; m < len4; m++) {\n              colKey = colKeys[m];\n              val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n              if (isFinite(val)) {\n                if (val < 1) {\n                  row.push(val.toPrecision(3));\n                } else {\n                  row.push(val.toFixed(3));\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            columns.push(row);\n          }\n          vAxisTitle = pivotData.aggregatorName + (pivotData.valAttrs.length ? \"(\" + (pivotData.valAttrs.map((function(_this) {\n            return function(attr) {\n              return labelFormatter(attr);\n            };\n          })(this)).join(\", \")) + \")\" : \"\");\n          hAxisTitle = pivotData.colAttrs.map((function(_this) {\n            return function(attr) {\n              return labelFormatter(attr);\n            };\n          })(this)).join(\"-\");\n          titleText = fullAggName;\n          if (hAxisTitle !== \"\") {\n            titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          groupByTitle = pivotData.rowAttrs.map((function(_this) {\n            return function(attr) {\n              return labelFormatter(attr);\n            };\n          })(this)).join(\"-\");\n          if (groupByTitle !== \"\") {\n            titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n        }\n        title = $(\"<p>\", {\n          style: \"text-align: center; font-weight: bold\"\n        });\n        title.text(titleText);\n        params = {\n          axis: {\n            y: {\n              label: vAxisTitle\n            },\n            x: {\n              label: hAxisTitle,\n              tick: {\n                rotate: rotationAngle,\n                multiline: false\n              }\n            }\n          },\n          data: {\n            type: chartOpts.type\n          },\n          tooltip: {\n            grouped: false\n          },\n          color: {\n            pattern: [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"]\n          }\n        };\n        $.extend(true, params, opts.c3);\n        if (chartOpts.type === \"scatter\") {\n          xs = {};\n          numSeries = 0;\n          dataColumns = [];\n          for (s in scatterData.x) {\n            numSeries += 1;\n            xs[s] = s + \"_x\";\n            dataColumns.push([s + \"_x\"].concat(scatterData.x[s]));\n            dataColumns.push([s].concat(scatterData.y[s]));\n          }\n          params.data.xs = xs;\n          params.data.columns = dataColumns;\n          params.axis.x.tick = {\n            fit: false\n          };\n          if (numSeries === 1) {\n            params.legend = {\n              show: false\n            };\n          }\n          params.tooltip.format = {\n            title: function() {\n              return fullAggName;\n            },\n            name: function() {\n              return \"\";\n            },\n            value: function(a, b, c, d) {\n              return scatterData.t[c][d];\n            }\n          };\n        } else {\n          params.axis.x.type = 'category';\n          params.axis.x.categories = headers;\n          params.data.columns = columns;\n        }\n        if (chartOpts.stacked != null) {\n          params.data.groups = [\n            (function() {\n              var len5, n, results;\n              results = [];\n              for (n = 0, len5 = rowKeys.length; n < len5; n++) {\n                x = rowKeys[n];\n                results.push(x.join(\"-\"));\n              }\n              return results;\n            })()\n          ];\n        }\n        renderArea = $(\"<div>\", {\n          style: \"display:none;\"\n        }).appendTo($(\"body\"));\n        result = $(\"<div>\").appendTo(renderArea);\n        params.bindto = result[0];\n        c3.generate(params);\n        result.detach();\n        renderArea.remove();\n        return $(\"<div>\").append(title, result);\n      };\n    };\n    return $.pivotUtilities.c3_renderers = {\n      \"Line Chart\": makeC3Chart(),\n      \"Bar Chart\": makeC3Chart({\n        type: \"bar\"\n      }),\n      \"Stacked Bar Chart\": makeC3Chart({\n        type: \"bar\",\n        stacked: true\n      }),\n      \"Area Chart\": makeC3Chart({\n        type: \"area\",\n        stacked: true\n      }),\n      \"Scatter Chart\": makeC3Chart({\n        type: \"scatter\"\n      })\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=c3_renderers.js.map\n"]}